<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>mlRelayCommand with full function style and generic param</Title>
      <Author>pilot</Author>
      <Description>mvvmlight中relay command 使用代理的带泛型参数版本</Description>

      <Shortcut>mlRelay_Full_Generic</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>attribute</ID>
          <ToolTip>Name of the attribute holding the RelayCommand.</ToolTip>
          <Default>_myCommand</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>FuncName</ID>
          <ToolTip>Name of the RelayCommand.</ToolTip>
          <Default>Func</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>type</ID>
          <ToolTip>Type of the RelayCommand's parameter.</ToolTip>
          <Default>object</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>param</ID>
          <ToolTip>Name of the RelayCommand's parameter.</ToolTip>
          <Default>p</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Annotation</ID>
          <ToolTip>Annotation of the RelayCommand.</ToolTip>
          <Default>Annotation</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp">
          <![CDATA[private RelayCommand<$type$> $attribute$;
        /// <summary>
        /// $Annotation$ 的命令
        /// </summary>
        public RelayCommand<$type$> $FuncName$Command
        {
            get
            {
                return $attribute$ ?? ($attribute$ = new RelayCommand<$type$>($FuncName$));
            }
        }
        private void $FuncName$($type$ param)
        {
            $end$
        }]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>